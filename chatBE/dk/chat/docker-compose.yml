version: '3.8'

services:
  chat:
    build:
      context: ../../chat-app
    container_name: chat-service
    ports:
      - '3000:3000'
    env_file:
      - ../../chat-app/.env
    depends_on:
      - mongodb
      - mysql
    networks:
      - chat_network
    restart: always

  # MongoDB
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - chat_network

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    ports:
      - '8081:8081'
    environment:
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=0000
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
    depends_on:
      - mongodb

  # MySQL
  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USERNAME}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - chat_network

networks:
  chat_network:
    driver: bridge

volumes:
  mongodb_data: {}
  mysql_data: {}
